const mongoose = require("mongoose");

// Episode schema
const episodeSchema = mongoose.Schema(
  {
    _id: Number,
    title: String,
    thumbnail: Object,
    type: String,
    startDate: Date,
    endDate: Date,
    metaTags: Array,
    sourceLink: String,
    hlsSourceLink: String,
    viewCount: Number,
    status: String,
    artistList: [
      {
        id: Number,
        name: String,
        slug: String,
        profilePic: String,
        gradient: String,
        status: String,
        city: String,
      },
    ],
    seasonId: Number,
    showId: Number,
    description: String,
    slug: String,
    language: String,
    genre: String,
    duration: Number,
    like: Number,
    location: String,
    tg: String,
    mood: String,
    theme: String,
    isExclusive: Number,
    collectionId: Number,
    order: Number,
    subGenreList: Array,
    categoryList: Array,
    parentDetail: Object,
    label: String,
    displayLanguage: String,
    isExclusiveOrder: Number,
    randomOrder: Number,
    feedRandomOrder: Number,
    genreList: [
      {
        id: Number,
        name: String,
      },
    ],
    skipDisclaimer: Boolean,
    showSlug: String,
    collectionSlug: String,
    mogiHLS: Object,
    videoClip: String,
    audioClip: String,
    parentDetail: Object,
    episodeOrder: Number,
    clips: Object,
    createdAt: Date,
    updatedAt: Date,
    isNewContent: Boolean,
    isPopularContent: Boolean,
    consumptionRateCount: Number,
    likeConsumptionRatio: Number,
    likeCount: Number,
    selectedPeripheral: Object,
    keywordSearch: String,
    freeEpisode: Boolean,
    freeEpisodeDuration: Number,
    isPremium: Boolean,
    mediaAccessTier: Number,
    premiumNessOrder: Number,
    deepLink: String,
    complianceRating: String,
    preContentWarningText: String,
    complianceList: Array,
    contentWarnings: Array,
    nextEpisodeNudgeStartTime: Number,
    internalSearchTags: String,
    themes: [
      {
        id: { type: mongoose.Schema.Types.Number, ref: "theme" },
        name: { type: String },
        hindiName: { type: String },
      },
    ],
    moods: [
      {
        id: { type: mongoose.Schema.Types.Number, ref: "mood" },
        name: { type: String },
        hindiName: { type: String },
      },
    ],
    descriptorTags: [
      {
        id: { type: mongoose.Schema.Types.Number, ref: "descriptorTag" },
        name: { type: String },
        hindiName: { type: String },
      },
    ],
    visionularHls: {
      type: Object,
      default: {},
    },
    visionularHls265: {
      type: Object,
      default: {},
    },
  },
  {
    timestamps: true,
    versionKey: false,
  }
);

module.exports = {
  episodeSchema,
};
